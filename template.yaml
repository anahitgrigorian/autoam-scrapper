AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  auto.am scrapper

  The project is aimed to scrape car data from https://auto.am/.

Parameters:
  AutoAMAddress:
    Type: String

Globals:
  Function:
    Timeout: 60
    MemorySize: 128

Resources:
  OrchestratorStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: src/state-machine/orchestrator.yaml
      DefinitionSubstitutions:
        CheckPagesScrappedArn: !GetAtt CheckPagesScrappedFunction.Arn
        GetPageCountArn: !GetAtt GetPageCountFunction.Arn
        PageScrapperArn: !GetAtt PageScrapperFunction.Arn
        ProcessNewListingsArn: !GetAtt ProcessNewListingsFunction.Arn
        SetPagesScrappedArn: !GetAtt SetPagesScrappedFunction.Arn
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref CheckPagesScrappedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GetPageCountFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref PageScrapperFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessNewListingsFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref SetPagesScrappedFunction
      
  ScrapperLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: src/layer
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: makefile

  CheckPagesScrappedFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/check-pages-scrapped/
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
      - AWSLambdaBasicExecutionRole
      - Statement:
          - Effect: Allow
            Action:
              - ssm:*
            Resource: "*"
      Architectures:
        - x86_64

  ProcessNewListingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/process-new-listings/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
      - AWSLambdaBasicExecutionRole
      - Statement:
          - Effect: Allow
            Action:
              - sqs:*
            Resource: "*"
      Environment:
        Variables:
          AUTOAM_IP_ADDRESS: !Ref AutoAMAddress
      Layers:
      - !Ref ScrapperLayer

  GetPageCountFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/get-page-count/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          AUTOAM_IP_ADDRESS: !Ref AutoAMAddress
      Layers:
      - !Ref ScrapperLayer

  PageScrapperFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/page-scrapper/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          SQS_QUEUE_URL: !Ref ScrappedURLsQueue
          AUTOAM_IP_ADDRESS: !Ref AutoAMAddress
      Policies:
      - AWSLambdaBasicExecutionRole
      - Statement:
          - Effect: Allow
            Action:
              - sqs:*
            Resource: "*"
      Layers:
      - !Ref ScrapperLayer

  SetPagesScrappedFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/set-pages-scrapped/
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
      - AWSLambdaBasicExecutionRole
      - Statement:
          - Effect: Allow
            Action:
              - ssm:*
            Resource: "*"
      Architectures:
        - x86_64

  ScrappedURLsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ScrappedUrls
